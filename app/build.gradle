apply plugin: 'com.android.application'
apply plugin: 'com.github.gfx.ribbonizer'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.adiosesr.androidtraining"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        pago {
            applicationId 'com.example.adiosesr.androidtraining.pago'
            versionCode 1
            versionName '1.0'
        }
        gratis {
            applicationId 'com.example.adiosesr.androidtraining.gratis'
            versionCode 1
            versionName '1.0'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-v4:27.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    compile 'com.android.support:cardview-v7:27.0.2'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'
    compile 'com.android.support:design:27.0.2'
}
ribbonizer {
    builder { variant, iconFile ->
        if (variant.flavorName == "gratis") {
            def filter = customColorRibbonFilter(variant, iconFile, "#E65100")
            filter.label = "GRATIS"
            return filter
        } else if (variant.flavorName == "pago") {
            def filter = customColorRibbonFilter(variant, iconFile, "#1A237E")
            filter.label = "PAGO"
            return filter
        }
    }
}
